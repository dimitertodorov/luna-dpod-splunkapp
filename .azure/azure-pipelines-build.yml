# specific tag
trigger:
  tags:
    include:
    - v*.*.*
variables:
  git_version: $[replace(variables['Build.SourceBranchName'],'v','')]
pool: 
  vmImage: 'ubuntu-latest'
stages:
- stage: 'BuildSplunkApp'
  jobs:
  - job:
    steps:
      - checkout: self 
      - task: Cache@2
        displayName: Cache Powershell Modules
        inputs:
          key: Invoke-Build-Ubuntu
          path: /home/vsts/.local/share/powershell/Modules/InvokeBuild
          cacheHitVar: InvokeBuildIsCached
      - task: PowerShell@2
        displayName: 'Download Powershell Modules'
        condition: ne(variables.InvokeBuildIsCached,'true')
        inputs:
          pwsh: true
          targetType: inline
          script: |
            Set-PSRepository PSGallery -InstallationPolicy Trusted
            Install-Module InvokeBuild -ErrorAction Stop
      - task: PowerShell@2
        displayName: 'Validate Tag Version $(Build.SourceBranchName) matches app.manifest'
        inputs:
          pwsh: true
          targetType: inline
          script: |
            try {
                # Invoke build and get the variable Result
                Invoke-Build -Task ValidateGitVersionMatch -GitTagName "$(Build.SourceBranchName)" -Result Result
            }
            finally {
                # Show build error
                "Build error: $(if ($Result.Error) {$Result.Error} else {'None'})"
                # Show task summary
                Write-Output $Result.Tasks | Format-Table Elapsed, Name, Error -AutoSize
                if ($Result.Error) {
                    exit 1
                }
            }
      - task: PowerShell@2
        displayName: 'Build Release $(Build.SourceBranchName)'
        inputs:
          pwsh: true
          targetType: inline
          script: |
            try {
                # Invoke build and get the variable Result
                Invoke-Build -Task BuildSplunkAppTgz -Result Result
            }
            finally {
                # Show build error
                "Build error: $(if ($Result.Error) {$Result.Error} else {'None'})"
                # Show task summary
                Write-Output $Result.Tasks | Format-Table Elapsed, Name, Error -AutoSize
                if ($Result.Error) {
                    exit 1
                }
            }
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(SplunkAppPackagePath)'
          artifactType: 'pipeline'
          artifactName: 'splunkapp'